{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Speakers:Authentication:ClientId": {
      "type": "string"
    },
    "Speakers:Authentication:ApplicationIdUri": {
      "type": "string"
    },
    "Conferences:Authentication:ClientId": {
      "type": "string"
    },
    "Conferences:Authentication:ApplicationIdUri": {
      "type": "string"
    },
    "Bff:SpeakerApiUri": {
      "type": "string"
    },
    "Bff:ConferencesApiUri": {
      "type": "string"
    },
    "utcShort": {
      "type": "string",
      "defaultValue": "[utcNow('d')]"
    }
  },
  "variables": {
    "projectPrefix": "janv-secureapi",
    "defaultTags": {
      "Project": "secureapi",
      "Purpose": "livecoding",
      "LastDeployed": "[parameters('utcShort')]"
    },
    "serverfarm": {
      "instanceName": "secureapi-farm",
      "sku": "S1"
    },
    "apis": {
      "backendForFrontend": {
        "instanceName": "[concat(variables('projectPrefix'), '-api')]"
      },
      "speakers": {
        "instanceName": "[concat(variables('projectPrefix'), '-speakers')]"
      },
      "conferences": {
        "instanceName": "[concat(variables('projectPrefix'), '-conferences')]"
      }
    },
    "worker": {
      "speakers": {
        "instanceName": "[concat(variables('projectPrefix'), '-speakers-worker')]"
      },
      "api": {
        "instanceName": "[concat(variables('projectPrefix'), '-api-worker')]"
      }
    },
    "applicationInsights": {
      "instanceName": "[concat(variables('projectPrefix'), '-insights')]"
    },
    "storage": {
      "internal": {
        "instanceName": "jvscrapiinternalstrge",
        "queues": {
          "speakerApiEvents": "speaker-api-events",
          "speakerCommands": "speaker-commands"
        }
      },
      "speakerWorker": {
        "instanceName": "jvspkrworkerstrge"
      },
      "apiWorker": {
        "instanceName": "jvapiworkerstrge"
      }
    },
    "eventgrid": {
      "topic": {
        "instanceName": "api-events"
      },
      "subscription": {
        "speaker": {
          "instanceName": "speaker-api-events",
          "subscriptionQueueName": "[variables('storage').internal.queues.speakerApiEvents]"
        }
      }
    },
    "backendVirtualNetwork": {
      "instanceName": "[concat(variables('projectPrefix'), '-backend-network')]",
      "addressPrefixes": [
        "10.1.0.0/16"
      ],
      "subnets": {
        "appSubnet": {
          "instanceName": "[concat(variables('projectPrefix'), '-app-subnet')]",
          "properties": {
            "addressPrefix": "10.1.1.0/24",
            "serviceEndpoints": [
              {
                "service": "Microsoft.Web",
                "locations": [
                  "*"
                ]
              }
            ],
            "delegations": [
              {
                "properties": {
                  "serviceName": "Microsoft.Web/serverFarms"
                },
                "name": "webapp"
              }
            ]
          }
        }
      }
    }
  },
  "resources": [
    {
      "name": "[variables('serverfarm').instanceName]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "properties": {
        "reserved": false
      },
      "sku": {
        "name": "[variables('serverfarm').sku]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('apis').backendForFrontend.instanceName]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]",
        "[variables('applicationInsights').instanceName]"
      ],
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('apis').backendForFrontend.instanceName)]"
          ],
          "properties": {
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "requestTracingEnabled": true,
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 40,
            "detailedErrorLoggingEnabled": true
          }
        },
        {
          "apiVersion": "2018-02-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('apis').backendForFrontend.instanceName)]"
          ],
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsights').instanceName), '2015-05-01').InstrumentationKey]",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
            "APPLICATIONINSIGHTS_CONNECTION_STRING": "[concat('InstrumentationKey=', reference(resourceId('microsoft.insights/components/', variables('applicationInsights').instanceName), '2015-05-01').InstrumentationKey)]",
            "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
            "DiagnosticServices_EXTENSION_VERSION": "~3",
            "InstrumentationEngine_EXTENSION_VERSION": "~1",
            "SnapshotDebugger_EXTENSION_VERSION": "~1",
            "XDT_MicrosoftApplicationInsights_BaseExtensions": "~1",
            "XDT_MicrosoftApplicationInsights_Mode": "recommended",
            "ActiveDirectory:TenantId": "[subscription().tenantId]",
            "Conferences:ApplicationIdUri": "[parameters('Conferences:Authentication:ApplicationIdUri')]",
            "Conferences:ConferencesApiUri": "[parameters('Bff:ConferencesApiUri')]",            
            "Speakers:ApplicationIdUri": "[parameters('Speakers:Authentication:ApplicationIdUri')]",
            "Speakers:SpeakerApiUri": "[parameters('Bff:SpeakerApiUri')]",
            "Speakers:CommandQueueName": "[variables('storage').internal.queues.speakerCommands]",
            "Speakers:StorageAccount": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').internal.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').internal.instanceName), '2015-05-01-preview').key1,';')]"
          }
        }
      ]
    },
    {
      "name": "[concat(variables('apis').backendForFrontend.instanceName, '/Staging')]",
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[concat('Microsoft.Web/Sites/', variables('apis').backendForFrontend.instanceName)]"
      ],
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      },
      "resources": [
      ]
    },
    {
      "name": "[concat(variables('apis').backendForFrontend.instanceName, '/virtualNetwork')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('apis').backendForFrontend.instanceName)]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('backendVirtualNetwork').instanceName)]"
      ],
      "properties":
      {
        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('backendVirtualNetwork').instanceName, variables('backendVirtualNetwork').subnets.appSubnet.instanceName)]",
        "swiftSupported": true
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('apis').conferences.instanceName]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      ],
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('apis').conferences.instanceName)]",
            "[resourceId('Microsoft.Network/virtualNetworks/', variables('backendVirtualNetwork').instanceName)]"
          ],
          "properties": {
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "requestTracingEnabled": true,
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 40,
            "detailedErrorLoggingEnabled": true,
            "ipSecurityRestrictions": [
              {
                  "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('backendVirtualNetwork').instanceName, variables('backendVirtualNetwork').subnets.appSubnet.instanceName)]",
                  "action": "Allow",
                  "tag": "Default",
                  "priority": 100,
                  "name": "backend-services"
              },
              {
                  "ipAddress": "Any",
                  "action": "Deny",
                  "priority": 2147483647,
                  "name": "Deny all",
                  "description": "Deny all access"
              }
              ],
              "scmIpSecurityRestrictions": [
              {
                  "ipAddress": "Any",
                  "action": "Allow",
                  "priority": 1,
                  "name": "Allow all",
                  "description": "Allow all access"
              }
            ],
            "scmIpSecurityRestrictionsUseMain": false
          }
        },
        {
          "apiVersion": "2018-02-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('apis').conferences.instanceName)]"
          ],
          "properties": {
            "Authentication:Authority": "[concat('https://login.microsoftonline.com/', subscription().tenantId)]",
            "Authentication:ClientId": "[parameters('Conferences:Authentication:ClientId')]",
            "Authentication:AppIdUri": "[parameters('Conferences:Authentication:ApplicationIdUri')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('apis').speakers.instanceName]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]"
      ],
      "resources": [
        {
          "apiVersion": "2018-02-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('apis').speakers.instanceName)]"
          ],
          "properties": {
            "webSocketsEnabled": false,
            "alwaysOn": true,
            "requestTracingEnabled": true,
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 40,
            "detailedErrorLoggingEnabled": true,
            "ipSecurityRestrictions": [
              {
                  "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('backendVirtualNetwork').instanceName, variables('backendVirtualNetwork').subnets.appSubnet.instanceName)]",
                  "action": "Allow",
                  "tag": "Default",
                  "priority": 100,
                  "name": "backend-services"
              },
              {
                  "ipAddress": "Any",
                  "action": "Deny",
                  "priority": 2147483647,
                  "name": "Deny all",
                  "description": "Deny all access"
              }
              ],
              "scmIpSecurityRestrictions": [
              {
                  "ipAddress": "Any",
                  "action": "Allow",
                  "priority": 1,
                  "name": "Allow all",
                  "description": "Allow all access"
              }
            ],
            "scmIpSecurityRestrictionsUseMain": false
          }
        },
        {
          "apiVersion": "2018-02-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', variables('apis').speakers.instanceName)]"
          ],
          "properties": {
            "Authentication:Authority": "[concat('https://login.microsoftonline.com/', subscription().tenantId)]",
            "Authentication:ClientId": "[parameters('Speakers:Authentication:ClientId')]",
            "Authentication:AppIdUri": "[parameters('Speakers:Authentication:ApplicationIdUri')]"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-04-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('worker').speakers.instanceName]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storage').speakerWorker.instanceName)]"
      ],
      "properties": {
        "name": "[variables('worker').speakers.instanceName]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('worker').speakers.instanceName)]",
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('storage').apiWorker.instanceName)]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').speakerWorker.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').speakerWorker.instanceName), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').speakerWorker.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').speakerWorker.instanceName), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsights').instanceName), '2015-05-01').InstrumentationKey]",
            "Speakers:CommandQueueName": "[variables('storage').internal.queues.speakerCommands]",
            "Speakers:StorageAccount": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').internal.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').internal.instanceName), '2015-05-01-preview').key1,';')]",
            "EventGridBindingSampleTopicEndpoint": "[reference(variables('eventgrid').topic.instanceName).endpoint]",
            "EventGridBindingSampleTopicKey": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('eventgrid').topic.instanceName), '2017-06-15-preview').key1]"            
          }
        }
      ]
    },
    {
      "apiVersion": "2015-04-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('worker').api.instanceName]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storage').speakerWorker.instanceName)]"
      ],
      "properties": {
        "name": "[variables('worker').api.instanceName]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm').instanceName)]",
        "hostingEnvironment": "",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('worker').api.instanceName)]",
            "[resourceId('Microsoft.Storage/storageAccounts/', variables('storage').apiWorker.instanceName)]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').apiWorker.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').apiWorker.instanceName), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').apiWorker.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').apiWorker.instanceName), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', variables('applicationInsights').instanceName), '2015-05-01').InstrumentationKey]",
            "Events:EventQueueName": "[variables('storage').internal.queues.speakerApiEvents]",
            "Events:StorageAccount": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage').internal.instanceName,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage').internal.instanceName), '2015-05-01-preview').key1,';')]"
          }
        }
      ]
    },
    {
      "name": "[variables('applicationInsights').instanceName]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 30,
        "DisableIpMasking": false,
        "ImmediatePurgeDataOn30Days": true
      }
    },
    {
      "name": "[variables('backendVirtualNetwork').instanceName]",
      "type": "Microsoft.Network/VirtualNetworks",
      "apiVersion": "2020-04-01",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "dependsOn": [],
      "properties": {
          "addressSpace": {
            "addressPrefixes": "[variables('backendVirtualNetwork').addressPrefixes]"
          },
          "subnets": [
            {
              "name": "[variables('backendVirtualNetwork').subnets.appSubnet.instanceName]",
              "properties": "[variables('backendVirtualNetwork').subnets.appSubnet.properties]"
            }
          ]
      }
    },
    {
      "name": "[variables('storage').internal.instanceName]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "apiVersion": "2019-04-01",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "name": "[variables('storage').speakerWorker.instanceName]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "apiVersion": "2019-04-01",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "name": "[variables('storage').apiWorker.instanceName]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "apiVersion": "2019-04-01",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "name": "[variables('eventgrid').topic.instanceName]",
      "type": "Microsoft.EventGrid/topics",
      "location": "[resourceGroup().location]",
      "tags": "[variables('defaultTags')]",
      "apiVersion": "2018-01-01"
    },
    {
      "name": "[concat(variables('eventgrid').topic.instanceName, '/Microsoft.EventGrid/', variables('eventgrid').subscription.speaker.instanceName)]",
      "type": "Microsoft.EventGrid/topics/providers/eventSubscriptions",
      "apiVersion": "2019-06-01",
      "properties": {
          "destination": {
              "endpointType": "StorageQueue",
              "properties": {
                  "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storage').internal.instanceName)]",
                  "queueName": "[variables('eventgrid').subscription.speaker.subscriptionQueueName]"
              }
          },
          "filter": "",
          "labels": [
          ],
          "eventDeliverySchema": "EventGridSchema"
      }
    }
  ]
}
